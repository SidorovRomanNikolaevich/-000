1. Включаем заголовочные файлы, необходимые для работы с вводом/выводом, выделением памяти и другими стандартными функциями языка C.
2. Определяем константы ROWS и COLS для размера лабиринта.
3. Определяем структуру Point для представления точки в лабиринте.
4. Создаем функцию isValid, которая проверяет, является ли точка допустимой в лабиринте.
5. Создаем функцию leeAlgorithm, которая реализует алгоритм Ли для поиска кратчайшего пути в лабиринте.
6. В функции main создаем двумерный массив maze, представляющий лабиринт, и инициализируем его значениями.
7. Задаем начальную и конечную точки в лабиринте.
8. Засекаем время начала выполнения алгоритма.
9. Вызываем функцию leeAlgorithm для поиска кратчайшего пути в лабиринте.
10. Засекаем время окончания выполнения алгоритма.
11. Вычисляем время выполнения алгоритма в секундах.
12. Выводим длину кратчайшего пути и время выполнения на экран.
13. Открываем файл log.txt для записи результатов в него.
14. Записываем результаты (длину кратчайшего пути и время выполнения) в файл log.txt.
15. Закрываем файл и завершаем программу.
